# -*- coding: utf-8 -*-
"""satis calc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/JazzManToo/satisfactory-calc-personal/blob/main/satisfactory%20calculator.ipynb

# Basic Instructions
***NEVER DOUBLE CLICK ON THE FORM CODE BLOCK***
1.  Input desired target recipe and amount per minute
2.  Change the Recipe setting to have the desired alternate/normal recipes that you want used
3. Run the code cell, by either clicking the "Run Cell Button" (Triangle in a circle), or pressng Ctrl+Enter with the code block selected
"""
import pandas as pd
import numpy as np
recipes_url = 'https://raw.githubusercontent.com/JazzManToo/satisfactory-calc-personal/main/Satisfactory%20every%20recipe.csv'
df = pd.read_CSV('recipes_url')

def craft(item, recipe, target, In1, In2, In3, In4, By1):
    x = target/df.loc[recipe, item]
    print(y, ': ', round(z, 2), df.loc[recipe, 'Building'], '(s)\nRecipe:', recipe)
    In1_Target = x * abs(df.loc[recipe, In1])
    In2_Target = x * abs(df.loc[recipe, In2])
    In3_Target = x * abs(df.loc[recipe, In3])
    In4_Target = x * abs(df.loc[recipe, In4])
    By1_Target = x * abs(df.loc[recipe, By1])
    if In1 != None:
      Target_Resources.remove(In1)
      Target_Resources.append(In1)
    if In2 != None:
      Target_Resources.remove(In2)
      Target_Resources.append(In2)
    if In3 != None:
      Target_Resources.remove(In3)
      Target_Resources.append(In3)
    if In4 != None:
      Target_Resources.remove(In4)
      Target_Resources.append(In4) 
    if By1 != None:
      Byproducts.remove(By1)
      Byproducts.append(By1)
    return {'In1_Target': In1_Target, 'In2_Target': In2_Target, 'In3_Target': In3_Target, 'In4_Target': In4_Target, 'By1_Target': By1_Target}

#@title Calculator Input { vertical-output: true }
Target_Resource = "Adaptive_Control_Unit" #@param ["Adaptive_Control_Unit", "AI_Limiter", "Alclad_Aluminum_Sheet", "Alien_Carapace", "Alumina_Solution", "Aluminum_Casing", "Aluminum_Ingot", "Alien_Organs", "Aluminum_Scrap", "Assembly_Director_System", "Automated_Wiring", "Battery", "Bauxite", "Beacon", "Biomass", "Black_Powder", "Cable", "Caterium_Ingot", "Caterium_Ore", "Circuit_Board", "Coal", "Color_Cartridge", "Compacted_Coal", "Computer", "Concrete", "Cooling_System", "Copper_Ingot", "Copper_Ore", "Copper_Powder", "Copper_Sheet", "Crude_Oil", "Crystal_Oscillator", "Electromagnetic_Control_Rod", "Empty_Canister", "Empty_Fluid_Tank", "Encased_Industrial_Beam", "Encased_Plutonium_Cell", "Encased_Uranium_Cell", "Fabric", "Flower_Petals", "Fuel", "Fused_Modular_Frame", "Gas_Filter", "Heat_Sink", "Heavy_Modular_Frame", "Heavy_Oil_Residue", "High_Speed_Connector", "Iodine_Infused_Filter", "Iron_Ingot", "Iron_Ore", "Iron_Plate", "Iron_Rod", "Leaves", "Limestone", "Liquid_Biofuel", "Magnetic_Field_Generator", "Modular_Engine", "Modular_Frame", "Motor", "Mycelia", "Nitric_Acid", "Nitrogen_Gas", "Nobelisk", "Non_Fissile_Uranium", "Nuclear_Fuel_Rod", "Nuclear_Pasta", "Nuclear_Waste", "Packaged_Alumina_Solution", "Packaged_Fuel", "Packaged_Heavy_Oil_Residue", "Packaged_Liquid_Biofuel", "Packaged_Nitric_Acid", "Packaged_Nitrogen_Gas", "Packaged_Oil", "Packaged_Sulfuric_Acid", "Packaged_Turbofuel", "Packaged_Water", "Petroleum_Coke", "Plastic", "Plutonium_Fuel_Rod", "Plutonium_Pellets", "Plutonium_Waste", "Polymer_Resin", "Pressure_Conversion_Cube", "Quartz_Crystal", "Quickwire", "Radio_Control_Unit", "Raw_Quartz", "Reinforced_Iron_Plate", "Rifle_Cartridge", "Rotor", "Rubber", "Screw", "Silica", "Smart_Plating", "Solid_Biofuel", "Spiked_Rebar", "Stator", "Steel_Beam", "Steel_Ingot", "Steel_Pipe", "Sulfur", "Sulfuric_Acid", "Supercomputer", "Thermal_Propulsion_Rocket", "Turbo_Motor", "Turbofuel", "Uranium", "Versatile_Framework", "Vines", "Water", "Wire", "Wood"]
Target_Resource_Amount =  0#@param {type:"number"}
Alumina_Solution = "Alumina_Solution" #@param ["Alumina_Solution", "Sloppy_Alumina"]
Aluminum_Casing = "Aluminum_Casing" #@param ["Aluminum_Casing", "Alclad_Casing"]
Aluminum_Ingot = "Pure_Aluminum_Ingot" #@param ["Aluminum_Ingot", "Pure_Aluminum_Ingot"]
Aluminum_Scrap = "Aluminum_Scrap" #@param ["Aluminum_Scrap", "Electrode_Aluminum_Scrap", "Instant_Scrap"]
Automated_Wiring = "Automated_Wiring" #@param ["Automated_Wiring", "High_Speed_Wiring"]
Battery = "Battery" #@param ["Battery", "Classic_Battery"]
Beacon = "Beacon" #@param ["Beacon", "Signal_Beacon"]
Biomass = "Alien_Carapace" #@param ["Alien_Carapace", "Alien_Organs", "Leaves", "Mycelia","Wood"]
Black_Powder = "Black_Powder" #@param ["Black_Powder", "Fine_Black_Powder"]
Cable = "Cable" #@param ["Cable", "Coated_Cable", "Insulated_Cable", "Quickwire_Cable"]
Caterium_Ingot = "Caterium_Ingot" #@param ["Caterium_Ingot", "Pure_Caterium_Ingot"]
Coal = "Mine" #@param ["Mine", "Biocoal", "Charcoal"]
Computer = "Computer" #@param ["Computer", "Crystal_Computer", "Caterium_Computer"]
Concrete = "Concrete" #@param ["Concrete", "Rubber_Concrete", "Wet_Concrete", "Fine_Concrete"]
Cooling_System = "Cooling_System" #@param ["Cooling_System", "Cooling_Device"]
Copper_Ingot = "Copper_Ingot" #@param ["Copper_Ingot", "Copper_Alloy_Ingot", "Pure_Copper_Ingot"]
Copper_Sheet = "Copper_Sheet" #@param ["Copper_Sheet", "Steamed_Copper_Sheet"]
Crystal_Oscillator = "Crystal_Oscillator" #@param ["Crystal_Oscillator", "Insulated_Crystal_Oscillator"]
Circuit_Board = "Circuit_Board" #@param ["Circuit_Board", "Electrode_Circuit_Board", "Silicone_Circuit_Board", "Caterium_Circuit_Board"]
Electromagnetic_Control_Rod = "Electromagnetic_Control_Rod" #@param ["Electromagnetic_Control_Rod", "Electromagnetic_Connection_Rod"]
Empty_Canister = "Empty_Canister" #@param ["Empty_Canister", "Steel_Canister", "Coated_Iron_Canister"]
Encased_Industrial_Beam = "Encased_Industrial_Beam" #@param ["Encased_Industrial_Beam", "Encased_Industrial_Pipe"]
Encased_Plutonium_Cell = "Encased_Plutonium_Cell" #@param ["Encased_Plutonium_Cell", "Instant_Plutonium_Cell"]
Encased_Uranium_Cell = "Encased_Uranium_Cell" #@param ["Encased_Uranium_Cell", "Infused_Uranium_Cell"]
Fabric = "Fabric" #@param ["Fabric", "Polyester_Fabric"]
Fuel = "Fuel" #@param ["Fuel", "Residual_Fuel", "Unpackage_Fuel(diluted)", "Diluted_Fuel"]
Fused_Modular_Frame = "Fused_Modular_Frame" #@param ["Fused_Modular_Frame", "Heat_Fused_Frame"]
Heat_Sink = "Heat_Sink" #@param ["Heat_Sink", "Heat_Exchanger"]
Heavy_Modular_Frame = "Heavy_Modular_Frame" #@param ["Heavy_Modular_Frame", "Heavy_Flexible_Frame", "Heavy_Encased_Frame"]
Heavy_Oil_Residue = "Plastic" #@param ["Plastic", "Rubber", "Polymer_Resin", "Heavy_Oil_Residue"]
High_Speed_Connector = "High_Speed_Connector" #@param ["High_Speed_Connector", "Silicone_High_Speed_Connector"]
Iron_Ingot = "Iron_Ingot" #@param ["Iron_Ingot", "Pure_Iron_Ingot", "Iron_Alloy_Ingot"]
Iron_Plate = "Iron_Plate" #@param ["Iron_Plate", "Coated_Iron_Plate", "Steel_Coated_Plate"]
Iron_Rod = "Iron_Rod" #@param ["Iron_Rod", "Steel_Rod"]
Modular_Frame = "Modular_Frame" #@param ["Modular_Frame", "Bolted_Frame", "Steeled_Frame"]
Motor = "Motor" #@param ["Motor", "Rigour_Motor", "Electric_Motor"]
Nobelisk = "Nobelisk" #@param ["Nobelisk", "Seismic_Nobelisk"]
Non_Fissile_Uranium = "Non_Fissile_Uranium" #@param ["Non_Fissile_Uranium", "Fertile_Uranium"]
Nuclear_Fuel_Rod_Fuel_Rod = "Uranium_Fuel_Rod" #@param ["Uranium_Fuel_Rod", "Nuclear_Fuel_Unit"]
Packaged_Fuel = "Packaged_Fuel" #@param ["Packaged_Fuel", "Diluted_Packaged_Fuel"]
Plastic = "Plastic" #@param ["Plastic", "Residual_Plastic", "Recycled_Plastic"]
Plutonium_Fuel_Rod = "Plutonium_Fuel_Rod" #@param ["Plutonium_Fuel_Rod", "Plutonium_Fuel_Unit"]
Polymer_Resin = "Fuel" #@param ["Fuel", "Polymer_Resin", "Heavy_Oil_Residue"]
Quartz_Crystal = "Quartz_Crystal" #@param ["Quartz_Crystal", "Pure_Quartz_Crystal"]
Quickwire = "Quickwire" #@param ["Quickwire", "Fused_Quickwire"]
Radio_Control_Unit = "Radio_Control_Unit" #@param ["Radio_Control_Unit", "Radio_Control_System", "Radio_Connection_Unit"]
Reinforced_Iron_Plate = "Reinforced_Iron_Plate" #@param ["Reinforced_Iron_Plate", "Adhered_Iron_Plate", "Bolted_Iron_Plate", "Stitched_Iron_Plate"]
Rotor = "Rotor" #@param ["Rotor", "Copper_Rotor", "Steel_Rotor"]
Rubber = "Rubber" #@param ["Rubber", "Residual_Rubber", "Recycled_Rubber"]
Screw = "Screw" #@param ["Screw", "Casted_Screw", "Steel_Screw"]
Silica = "Silica" #@param ["Silica", "Alumina_Solution", "Cheap_Silica"]
Smart_Plating = "Smart_Plating" #@param ["Smart_Plating", "Plastic_Smart_Plating"]
Stator = "Stator" #@param ["Stator", "Quickwire_Stator"]
Steel_Ingot = "Steel_Ingot" #@param ["Steel_Ingot", "Coke_Steel_Ingot", "Compacted_Steel_Ingot", "Solid_Steel_Ingot"]
Supercomputer = "Supercomputer" #@param ["Supercomputer", "OC_Supercomputer", "Super_State_Computer"]
Turbo_Motor = "Turbo_Motor" #@param ["Turbo_Motor", "Turbo_Rigour_Motor", "Turbo_Pressure_Motor"]
Turbofuel = "Turbofuel" #@param ["Turbofuel", "Turbo_Heavy_Fuel", "Turbo_Blend_Fuel"]
Versatile_Framework = "Versatile_Framework" #@param ["Versatile_Framework", "Flexible_Framework"]
Wire = "Wire" #@param ["Wire", "Fused_Wire", "Iron_Wire", "Caterium_Wire"]


ACU_Target = 0
AIL_Target = 0
AAS_Target = 0 
Alien_Carapace_Target = 0 
AS_Target = 0 
AC_Target = 0 
AI_Target = 0 
Alien_Organs_Target = 0 
ASc_Target = 0 
ADS_Target = 0 
AW_Target = 0 
Battery_Target = 0 
Bauxite_Target = 0 
Beacon_Target = 0 
Biomass_Target = 0 
BP_Target = 0 
Cable_Target = 0 
CopI_Target = 0 
Caterium_Ore_Target = 0 
CB_Target = 0 
Coal_Target = 0 
Color_Cartridge_Target = 0 
Compacted_Coal_Target = 0 
Computer_Target = 0 
Concrete_Target = 0 
CSys_Target = 0 
CatI_Target = 0 
Copper_Ore_Target = 0 
CPow_Target = 0 #totally didn't almost accidentally name this var CP_Target lol
CSheet_Target = 0 
Crude_Oil_Target = 0 
COsc_Target = 0 
ECR_Target = 0 
EC_Target = 0 
EFT_Target = 0 
EIB_Target = 0 
EPC_Target = 0 
EUC_Target = 0 
Fabric_Target = 0 
Flower_Petals_Target = 0 
Fuel_Target = 0 
FMF_Target = 0 
GF_Target = 0 
HS_Target = 0 
HMF_Target = 0 
HOR_Target = 0 
HSC_Target = 0 
IIF_Target = 0 
II_Target = 0 
Iron_Ore_Target = 0 
IP_Target = 0 
IR_Target = 0 
Leaves_Target = 0 
Limestone_Target = 0 
LB_Target = 0 
MFG_Target = 0 
ME_Target = 0 
MF_Target = 0 
Motor_Target = 0 
Mycelia_Target = 0 
NA_Target = 0 
Nitrogen_Gas_Target = 0 
Nobelisk_Target = 0 
NFU_Target = 0 
NFR_Target = 0 
NP_Target = 0 
NW_Target = 0 
PAS_Target = 0 
PF_Target = 0 
PHOR_Target = 0 
PLB_Target = 0 
PNA_Target = 0 
PNG_Target = 0 
PO_Target = 0 
PSA_Target = 0 
PT_Target = 0 
PW_Target = 0 
PC_Target = 0 
Plastic_Target = 0 
PFR_Target = 0 
PP_Target = 0 
PW_Target = 0 
PR_Target = 0 
PCC_Target = 0 
QCrystal_Target = 0 
Quickwire_Target = 0 
RCU_Target = 0 
Raw_Quartz_Target = 0 
RIP_Target = 0 
RC_Target = 0 
Rotor_Target = 0 
Rubber_Target = 0 
Screw_Target = 0 
Silica_Target = 0 
SP_Target = 0 
SB_Target = 0 
SR_Target = 0 
Stator_Target = 0 
SB_Target = 0 
SI_Target = 0 
SP_Target = 0 
Sulfur_Target = 0 
SA_Target = 0 
Supercomputer_Target = 0 
SO_Target = 0 
TPR_Target = 0 
TM_Target = 0 
Turbofuel_Target = 0 
Uranium_Target = 0 
VF_Target = 0
Water_Target = 0 
Wire_Target = 0 
Wood_Target = 0
Inputs = []
Byproducts = []
Target_Resources = []
Target_Resources.append(Target_Resource)
print('Target:', Target_Resource, 'at', Target_Resource_Amount, 'per minute')
for y in Target_Resources:
    print("\n")
    if y == "Adaptive_Control_Unit":
        if y == Target_Resource:
          ACU_target = Target_Resource_Amount
        results = craft(y, 'Adaptive_Control_Unit', ACU_Target, 'Automated_Wiring', 'Circuit_Board', 'Heavy_Modular_Frame', 'Computer', None)
        AW_Target += results['In1_Target']
        CB_Target += results['In2_Target']
        HMF_Target += results['In3_Target']
        C_Target += results['In4_Target']
        ACU_target = 0
    elif y == "AI_Limiter": 
        if y == Target_Resource:
          AIL_Target = Target_Resource_Amount
        results = craft(y, 'AI_Limiter', AIL_Target, 'Copper_Sheet', 'Quickwire', None, None, None)
        CSheet_Target += results['In1_Target']
        QW_Target += results['In2_Target']
        z = 0
        AIL_Target = 0
    elif y == "Alclad_Aluminum_Sheet": 
        if y == Target_Resource:
          AAS_target = Target_Resource_Amount
        results = craft(y, 'Alclad_Aluminum_Sheet', AAS_Target, 'Aluminum_Ingot', 'Copper_Ingot', None, None, None)
        AI_Target += results['In1_Target']
        CopI_Target += results['In2_Target']
        AAS_Target = 0
    elif y == "Alien_Carapace":
        Inputs.append("Alien_Carapce"  )
    elif y == "Alumina_Solution": 
        if Alumina_Solution == "Alumina_Solution":
            if y == Target_Resource:
                AS_Target = Target_Resource_Amount
            results = craft(y, Alumina_Solution, AS_Target, 'Bauxite', 'Water', None, None, 'Silica')
            Bauxite_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            Silica_Target += results['By1_Target']
            AS_Target = 0
        elif Alumina_Solution == "Sloppy_Alumina":
            if y == Target_Resource:
                AS_Target = Target_Resource_Amount
            results = craft(y, Alumina_Solution, AS_Target, 'Bauxite', 'Water', None, None, None)
            Bauxite_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            AS_Target = 0
    elif y == "Aluminum_Casing": 
        if Aluminum_Casing == "Aluminum_Casing":
            if y == Target_Resource:
                AC_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Casing, AC_Target, 'Aluminum_Ingot', None, None, None, None)
            AI_Target += results['In1_Target']
            AC_Target = 0
        elif Aluminum_Casing == "Alclad_Casing":
            if y == Target_Resource:
                AC_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Casing, AC_Target, 'Aluminum_Ingot', 'Copper_Ingot', None, None, None)
            AI_Target += results['In1_Target']
            CopI_Target += results['In2_Target']
            AC_Target = 0
    elif y == "Aluminum_Ingot": 
        if Aluminum_Ingot == "Aluminum_Ingot":
            if y == Target_Resource:
                AI_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Ingot, AI_Limiter, 'Aluminum_Scrap', 'Silica', None, None, None)
            ASc_Target += results['In1_Target']
            Silica_Target += results['In2_Target']
            AI_Target = 0
        elif Aluminum_Ingot == "Pure_Aluminum_Ingot":
            if y == Target_Resource:
                AI_target = Target_Resource_Amount
            results = craft(y, Aluminum_Ingot, AI_Target, 'Aluminum_Scrap', None, None, None, None)
            ASc_Target += results['In1_Target']
            AI_Target = 0
    elif y == "Alien_Organs": 
        Inputs.append("Alien_Organs")
    elif y == "Aluminum_Scrap": 
        if Aluminum_Scrap == "Aluminum_Scrap":
            if y == Target_Resource:
                ASc_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Scrap, ASc_Target, 'Alumina_Solution', 'Coal', None, None, 'Water')
            AS_Target += results['In1_Target']
            Coal_Target += results['In2_Target']
            Water_Target -= results['By1_Target']
            Target_Resources.insert(-2,)
            Target_Resources.append()
            ASc_Target = 0
        elif Aluminum_Scrap == "Electrode_Aluminum_Scrap":
            if y == Target_Resource:
                ASc_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Scrap, ASc_Target, 'Alumina_Solution', 'Petroleum_Coke', None, None, 'Water')
            AS_Target += results['In1_Target']
            PC_Target += results['In2_Target']
            Water_Target -= results['By1_Target']
            ASc_Target = 0
        elif Aluminum_Scrap == "Instant_Scrap":
            if y == Target_Resource:
                ASc_Target = Target_Resource_Amount
            results = craft(y, Aluminum_Scrap, ACU_Target, 'Bauxite', 'Coal', 'Sulfuric_Acid', 'Water', None)
            Bauxite_Target += results['In1_Target']
            Coal_Target += results['In2_Target']
            SA_Target += results['In3_Target']
            Water_Target += results['In4_Target']
            print('Output water from this recipie:', 40 * ASc_Target / 300)
            ASc_Target = 0
    elif y == "Assembly_Director_System": 
        if y == Target_Resource:
            ADS_Target = Target_Resource_Amount
        results = craft(y, 'Assembly_Director_System', ADS_Target, 'Adaptive_Control_Unit', 'Supercomputer', None, None, None)
        ACU_Target += results['In1_Target']
        Supercomputer_Target += results['In2_Target']
        ADS_Target = 0
    elif y == "Automated_Wiring": 
        if Automated_Wiring == 'Automated_Wiring':
            if y == Target_Resource:
                AW_Target = Target_Resource_Amount
            results = craft(y, Automated_Wiring, AW_Target, 'Stator', 'Cable', None, None, None)
            Stator_Target += results['In1_Target']
            Cable_Target += results['In2_Target']
            AW_Target = 0
        elif Automated_Wiring == 'High_Speed_Wiring':
            if y == Target_Resource:
                AW_Target = Target_Resource_Amount
            results = craft(y, Automated_Wiring, ACU_Target, 'Stator', 'Wire', 'High_Speed_Connector', None, None)
            Stator_Target += results['In1_Target']
            Wire_Target += results['In2_Target']
            HSC_Target += results['In3_Target']
            AW_Target = 0
    elif y == "Battery": 
        if Battery == 'Battery':
            if y == Target_Resource:
                Battery_Target = Target_Resource_Amount
            results = craft(y, Battery, Battery_Target, 'Aluminum_Casing', 'Alumina_Solution', 'Sulfuric_Acid', None, 'Water')
            AC_Target += results['In1_Target']
            AS_Target += results['In2_Target']
            SA_Target += results['In3_Target']
            Water_Target -= results['By1_Target']
            Battery_Target = 0
        elif Battery == 'Classic_Battery':
            if y == Target_Resource:
                Battery_Target = Target_Resource_Amount
            results = craft(y, Battery, Battery_Target, 'Sulfur', 'Alclad_Aluminum_Sheet', 'Plastic', 'Wire', None)
            Sulfur_Target += results['In1_Target']
            AAS_target += results['In2_Target']
            Plastic_Target += results['In3_Target']
            Wire_Target += results['In4_Target']
            Battery_Target = 0
    elif y == "Bauxite": 
        Inputs.append("Bauxite")
    elif y == "Beacon": 
        if Beacon == 'Beacon':
            if y == Target_Resource:
                Beacon_Target = Target_Resource_Amount
            results = craft(y, Beacon, Beacon_Target, 'Iron_Plate', 'Iron_Rod', 'Cable', 'Wire', None)
            IP_Target += results['In1_Target']
            IR_Target += results['In2_Target']
            Cable_Target += results['In3_Target']
            Wire_Target += results['In4_Target']
            Beacon_Target = 0
        elif Beacon == 'Signal_Beacon':
            if y == Target_Resource:
                Beacon_Target = Target_Resource_Amount
            results = craft(y, Beacon, Beacon_Target, 'Steel_Beam', 'Steel_Pipe', 'Crystal_Oscillator', None, None)
            SB_Target += results['In1_Target']
            SP_Target += results['In2_Target']
            COsc_Target += results['In3_Target']
            Beacon_Target = 0
    elif y == "Biomass": 
        if Biomass == "Alien_Carapace":
            if y == Target_Resource:
                Biomass_Target = Target_Resource_Amount
            results = craft(y, 'Biomass_Alien_Carapace', Biomass_Target, 'Alien_Carapace', None, None, None, None)
            Alien_Carapace_Target += results['In1_Target']
            Biomass_Target = 0
        elif Biomass == "Alien_Organs":
            if y == Target_Resource:
                Biomass_Target = Target_Resource_Amount
            results = craft(y, 'Biomass_Alien_Organs', Biomass_Target, 'Alien_Organs', None, None, None, None)
            Alien_Organs_Target += results['In1_Target']
            Biomass_Target = 0
        elif Biomass == "Leaves":
            if y == Target_Resource:
                Biomass_Target = Target_Resource_Amount
            results = craft(y, 'Biomass_Leaves', Biomass_Target, 'Leaves', None, None, None, None)
            Leaves_Target += results['In1_Target']
            Biomass_Target = 0
        elif Biomass == "Mycelia":
            if y == Target_Resource:
                Biomass_Target = Target_Resource_Amount
            results = craft(y, 'Biomass_Mycelia', Biomass_Target, 'Mycelia', None, None, None, None)
            Mycelia_Target += results['In1_Target']
            z = 0
            Biomass_Target = 0
        elif Biomass == "Wood":
            if y == Target_Resource:
                Biomass_Target = Target_Resource_Amount
            results = craft(y, 'Biomass_Wood', Biomass_Target, 'Wood', None, None, None, None)
            Wood_Target += results['In1_Target']
            Biomass_Target = 0
    elif y == "Black_Powder": 
        if Black_Powder == 'Black_Powder':
            if y == Target_Resource:
                BP_Target = Target_Resource_Amount
            results = craft(y, Black_Powder, BP_Target, 'Coal', 'Sulfur', None, None, None)
            Coal_Target += results['In1_Target']
            Sulfur_Target += results['In2_Target']
            BP_Target = 0
        elif Black_Powder == 'Fine_Black_Powder':
            if y == Target_Resource:
                BP_Target = Target_Resource_Amount
            results = craft(y, Black_Powder, BP_Target, 'Compacted_Coal', 'Sulfur', None, None, None)
            Compacted_Coal_Target += results['In1_Target']
            Sulfur_Target += results['In2_Target']
            BP_Target = 0
    elif y == "Cable": 
        if Cable == "Cable":
            if y == Target_Resource:
                Cable_Target = Target_Resource_Amount
            results = craft(y, Cable, Cable_Target, 'Wire', None, None, None, None)
            Wire_Target += results['In1_Target']
            Cable_Target = 0
        elif Cable == "Coated_Cable":
            if y == Target_Resource:
                Cable_Target = Target_Resource_Amount
            results = craft(y, Cable, Cable_Target, 'Wire', 'Heavy_Oil_Residue', None, None, None)
            Wire_Target += results['In1_Target']
            HOR_Target += results['In2_Target']
            Cable_Target = 0
        elif Cable == "Insulated_Cable":
            if y == Target_Resource:
                Cable_Target = Target_Resource_Amount
            results = craft(y, Cable, Cable_Target, 'Wire', 'Rubber', None, None, None)
            Wire_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            Cable_Target = 0
        elif Cable == "Quickwire_Cable":
            if y == Target_Resource:
                Cable_Target = Target_Resource_Amount
            results = craft(y, recipe, ACU_Target, 'Quickwire', 'Rubber', None, None, None)
            Quickwire_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            Cable_Target = 0
    elif y == "Caterium_Ingot": 
        if Caterium_Ingot == 'Caterium_Ingot':
            if y == Target_Resource:
                CatI_Target = Target_Resource_Amount
            results = craft(y, Caterium_Ingot, CatI_Target, 'Caterium_Ore', None, None, None, None)
            Caterium_Ore_Target += results['In1_Target']
            CatI_Target = 0
        elif Caterium_Ingot == 'Pure_Caterium_Ingot':
            if y == Target_Resource:
                CatI_Target = Target_Resource_Amount
            results = craft(y, Caterium_Ingot, CatI_Target, 'Caterium_Ore', 'Water', None, None, None)
            Caterium_Ore_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            CatI_Target = 0
    elif y == "Caterium_Ore": 
        Inputs.append("Caterium_Ore")
    elif y == "Circuit_Board": 
        if Circuit_Board == "Circuit_Board":
            if y == Target_Resource:
                CB_Target = Target_Resource_Amount
            results = craft(y, Circuit_Board, CB_Target, 'Copper_Sheet', 'Plastic', None, None, None)
            CSheet_Target += results['In1_Target']
            Plastic_Target += results['In2_Target']
            CB_Target = 0
        elif Circuit_Board == "Electrode_Circuit_Board":
            if y == Target_Resource:
                CB_Target = Target_Resource_Amount
            results = craft(y, Circuit_Board, CB_Target, 'Rubber', 'Petroleum_Coke', None, None, None)
            Rubber_Target += results['In1_Target']
            PC_Target += results['In2_Target']
            CB_Target = 0
        elif Circuit_Board == "Silicone_Circuit_Board":
            if y == Target_Resource:
                CB_Target = Target_Resource_Amount
            results = craft(y, Circuit_Board, CB_Target, 'Copper_Sheet', 'Silica', None, None, None)
            CSheet_Target += results['In1_Target']
            Silica_Target += results['In2_Target']
            CB_Target = 0
        elif Circuit_Board == "Caterium_Circuit_Board":
            if y == Target_Resource:
                CB_Target = Target_Resource_Amount
            results = craft(y, Circuit_Board, CB_Target, 'Plastic', 'Quickwire', None, None, None)
            Plastic_Target += results['In1_Target']
            Quickwire_Target += results['In2_Target']
            CB_Target = 0
    elif y == "Coal": 
        if Coal == "Mine":
            Inputs.append('Coal')
        elif Coal == "Biocoal":
            if y == Target_Resource:
                Coal_Target = Target_Resource_Amount
            results = craft(y, Coal, Coal_Target, 'Biomass', None, None, None, None)
            Biomass_Target += results['In1_Target']
            Coal_Target = 0
        elif Coal == "Charcoal":
            if y == Target_Resource:
                Coal_Target = Target_Resource_Amount
            results = craft(y, Coal, Coal_Target, 'Wood', None, None, None, None)
            Wood_Target += results['In1_Target']
            Coal_Target = 0
    elif y == "Color_Cartridge": 
        if y == Target_Resource:
            Color_Cartridge_Target = Target_Resource_Amount
        results = craft(y, Color_Cartridge, Color_Cartridge_Target, 'Flower_Petals', None, None, None, None)
        Flower_Petals_Target += results['In1_Target']
        Color_Cartridge_Target = 0
    elif y == "Compacted_Coal": 
        if y == Target_Resource:
            Compacted_Coal_Target = Target_Resource_Amount
        results = craft(y, recipe, ACU_Target, 'Coal', 'Sulfur', None, None, None)
        Coal_Target += results['In1_Target']
        Sulfur_Target += results['In2_Target']
        Compacted_Coal_Target = 0
    elif y == "Computer": 
        if Computer == "Computer":
            if y == Target_Resource:
                Computer_Target = Target_Resource_Amount
            results = craft(y, Computer, Computer_Target, 'Circuit_Board', 'Cable', 'Plastic', 'Screw', None)
            CB_Target += results['In1_Target']
            Cable_Target += results['In2_Target']
            Plastic_Target += results['In3_Target']
            Screw_Target += results['In4_Target']
            Computer_Target = 0
        elif Computer == "Crystal_Computer":
            if y == Target_Resource:
                Computer_Target = Target_Resource_Amount
            results = craft(y, Computer, Computer_Target, 'Circuit_Board', 'Crystal_Oscillator', None, None, None)
            CB_Target += results['In1_Target']
            COsc_Target += results['In2_Target']
            Computer_Target = 0
        elif Computer == "Caterium_Computer":
            if y == Target_Resource:
                Computer_Target = Target_Resource_Amount
            results = craft(y, Computer, Computer_Target, 'Circuit_Board', 'Quickwire', 'Rubber', None, None)
            CB_Target += results['In1_Target']
            Quickwire_Target += results['In2_Target']
            Rubber_Target += results['In3_Target']
            Computer_Target = 0
    elif y == "Concrete": 
        if Concrete == "Concrete":
            if y == Target_Resource:
                Concrete_Target = Target_Resource_Amount
            results = craft(y, Concrete, Concrete_Target, 'Limestone', None, None, None, None)
            Limestone_Target += results['In1_Target']
            Concrete_Target = 0
        elif Concrete == "Rubber_Concrete":
            if y == Target_Resource:
                Concrete_Target = Target_Resource_Amount
            results = craft(y, Concrete, Concrete_Target, 'Limestone', 'Rubber', None, None, None)
            Limestone_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            Concrete_Target = 0
        elif Concrete == "Wet_Concrete":
            if y == Target_Resource:
                Concrete_Target = Target_Resource_Amount
            results = craft(y, Concrete, Concrete_Target, 'Limestone', 'Water', None, None, None)
            Limestone_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            Concrete_Target = 0
        elif Concrete == "Fine_Concrete":
            if y == Target_Resource:
                Concrete_Target = Target_Resource_Amount
            results = craft(y, Concrete, Concrete_Target, 'Silica', 'Limestone', None, None, None)
            Silica_Target += results['In1_Target']
            Limestone_Target += results['In2_Target']
            Concrete_Target = 0
    elif y == "Cooling_System": 
        if Cooling_System == "Cooling_System":
            if y == Target_Resource:
                CSys_Target = Target_Resource_Amount
            results = craft(y, Cooling_System, CSys_Target, 'Heat_Sink', 'Rubber', 'Water', 'Nitrogen_Gas', None)
            HS_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            Water_Target += results['In3_Target']
            Nitrogen_Gas_Target += results['In4_Target']
            CSys_Target = 0
        elif Cooling_System == "Cooling_Device":
            if y == Target_Resource:
                CSys_Target = Target_Resource_Amount
            results = craft(y, recipe, ACU_Target, 'Heat_Sink', 'Motor', 'Nitrogen_Gas', None, None)
            HS_Target += results['In1_Target']
            Motor += results['In2_Target']
            Nitrogen_Gas_Target += results['In3_Target']
            CSys_Target = 0
    elif y == "Copper_Ingot": 
        if Copper_Ingot == "Copper_Ingot":
            if y == Target_Resource:
                CopI_Target = Target_Resource_Amount
            results = craft(y, Copper_Ingot, CopI_Target, 'Copper_Ore', None, None, None, None)
            Copper_Ore_Target += results['In1_Target']
            CopI_Target = 0
        elif Copper_Ingot == "Copper_Alloy_Ingot":
            if y == Target_Resource:
                CopI_Target = Target_Resource_Amount
            results = craft(y, Copper_Ingot, CopI_Target, 'Copper_Ore', 'Iron_Ore', None, None, None)
            Copper_Ore_Target += results['In1_Target']
            Iron_Ore_Target += results['In2_Target']
            CopI_Target = 0
        elif Copper_Ingot == "Pure_Copper_Ingot":
            if y == Target_Resource:
                CopI_Target = Target_Resource_Amount
            results = craft(y, recipe, ACU_Target, 'Copper_Ore', 'Water', None, None, None)
            Copper_Ore_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            CopI_Target = 0
    elif y == "Copper_Ore": 
        Inputs.append('Copper_Ore')
    elif y == "Copper_Powder": 
        if y == Target_Resource:
            CPow_Target = Target_Resource_Amount
        results = craft(y, 'Copper_Powder', CPow_Target, 'Copper_Ingot', None, None, None, None)
        CopI_Target += results['In1_Target']
        CPow_Target = 0
    elif y == "Copper_Sheet": 
        if Copper_Sheet == 'Copper_Sheet':
            if y == Target_Resource:
                CSheet_Target= Target_Resource_Amount
            results = craft(y, Copper_Sheet, CSheet_Target, 'Copper_Ingot', None, None, None, None)
            CopI_Target += results['In1_Target']
            CSheet_Target = 0
        elif Copper_Sheet == 'Steamed_Copper_Sheet':
            if y == Target_Resource:
                CSheet_Target= Target_Resource_Amount
            results = craft(y, Copper_Sheet, CSheet_Target, 'Copper_Ingot', 'Water', None, None, None)
            CopI_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            CSheet_Target = 0
    elif y == "Crude_Oil": 
        Inputs.append('Crude_Oil')
    elif y == "Crystal_Oscillator": 
        if Crystal_Oscillator == 'Crystal_Oscillator':
            if y == Target_Resource:
                COsc_Target= Target_Resource_Amount
            results = craft(y, Crystal_Oscillator, COsc_Target, 'Quartz_Crystal', 'Cable', 'Reinforced_Iron_Plate', None, None)
            QCrystal_Target += results['In1_Target']
            Cable_Target += results['In2_Target']
            RIP_Target += results['In3_Target']
            COsc_Target = 0
        elif Crystal_Oscillator == 'Insulated_Crystal_Oscillator':
            if y == Target_Resource:
                COsc_Target= Target_Resource_Amount
            results = craft(y, recipe, ACU_Target, 'Quartz_Crystal', 'Rubber', 'AI_Limiter', None, None)
            QCrystal_Target += results['In1_Target']
            Rubber_Target += results['In2_Target']
            AIL_Target += results['In3_Target']
            COsc_Target = 0
    elif y == "Electromagnetic_Control_Rod": 
        if Electromagnetic_Control_Rod == 'Electromagnetic_Control_Rod':
            if y == Target_Resource:
                ECR_Target= Target_Resource_Amount
            results = craft(y, Electromagnetic_Control_Rod, ECR_Target, 'Stator', 'AI_Limiter', None, None, None)
            Stator_Target += results['In1_Target']
            AIL_Target += results['In2_Target']
            ECR_Target = 0
        elif Electromagnetic_Control_Rod == 'Electromagnetic_Connection_Rod':
            if y == Target_Resource:
                ECR_Target= Target_Resource_Amount
            results = craft(y, Electromagnetic_Control_Rod, ECR_Target, 'Stator', 'High_Speed_Connector', None, None, None)
            Stator_Target += results['In1_Target']
            HSC_Target += results['In2_Target']
            ECR_Target = 0
    elif y == "Empty_Canister": 
        if Empty_Canister == "Empty_Canister":
            if y == Target_Resource:
                EC_Target= Target_Resource_Amount
            results = craft(y, Empty_Canister, EC_Target, 'Plastic', None, None, None, None)
            Plastic_Target += results['In1_Target']
            EC_Target = 0
        elif Empty_Canister == "Steel_Canister":
            if y == Target_Resource:
                EC_Target= Target_Resource_Amount
            results = craft(y, Empty_Canister, EC_Target, 'Steel_Ingot', None, None, None, None)
            SI_Target += results['In1_Target']
            EC_Target = 0
        elif Empty_Canister == "Coated_Iron_Canister":
            if y == Target_Resource:
                EC_Target= Target_Resource_Amount
            results = craft(y, Empty_Canister, EC_Target, 'Iron_Plate', 'Copper_Sheet', None, None, None)
            IP_Target += results['In1_Target']
            CSheet_Target += results['In2_Target']
            EC_Target = 0
    elif y == "Empty_Fluid_Tank": 
        if y == Target_Resource:
            EFT_Target= Target_Resource_Amount
        results = craft(y, Empty_Fluid_Tank, EFT_Target, 'Aluminum_Ingot', None, None, None, None)
        AI_Target += results['In1_Target']
        EFT_Target = 0
    elif y == "Encased_Industrial_Beam": 
        if Encased_Industrial_Beam == 'Encased_Industrial_Beam':
            if y == Target_Resource:
                EIB_Target= Target_Resource_Amount
            results = craft(y, Encased_Industrial_Beam, EIB_Target, 'Steel_Beam', 'Concrete', None, None, None)
            SB_Target += results['In1_Target']
            Concrete_Target += results['In2_Target']
            EIB_Target = 0
        elif Encased_Industrial_Beam == 'Encased_Industrial_Pipe':
            if y == Target_Resource:
                EIB_Target= Target_Resource_Amount
            results = craft(y, Encased_Industrial_Beam, EIB_Target, 'Steel_Pipe', 'Concrete', None, None, None)
            SP_Target += results['In1_Target']
            Concrete_Target += results['In2_Target']
            EIB_Target = 0
    elif y == "Encased_Plutonium_Cell": 
        if Encased_Plutonium_Cell == 'Encased_Plutonium_Cell':
            if y == Target_Resource:
                EPC_Target= Target_Resource_Amount
            results = craft(y, Encased_Plutonium_Cell, EPC_Target, 'Plutonium_Pellets', 'Concrete', None, None, None)
            PP_Target += results['In1_Target']
            Concrete_Target += results['In2_Target']
            EPC_Target = 0
        elif Encased_Plutonium_Cell == 'Instant_Plutonium_Cell':
            if y == Target_Resource:
                EPC_Target= Target_Resource_Amount
            results = craft(y, Encased_Plutonium_Cell, EPC_Target, 'Non_Fissile_Uranium', 'Aluminum_Casing', 'Nitrogen_Gas', None, None)
            NFU_Target += results['In1_Target']
            AC_Target += results['In2_Target']
            Nitrogen_Gas_Target += results['In3_Target']
            EPC_Target = 0
    elif y == "Encased_Uranium_Cell": 
        if Encased_Uranium_Cell == 'Encased_Uranium_Cell':
            if y == Target_Resource:
                EUC_Target= Target_Resource_Amount
            results = craft(y, Encased_Uranium_Cell, EUC_Target, 'Uranium', 'Concrete', 'Sulfuric_Acid', None, None)
            Uranium_Target += results['In1_Target']
            Concrete_Target += results['In2_Target']
            SA_Target += results['In3_Target']
            print('Output sulfuric acid from this recipie:', 10 * EUC_Target / 25)
            EUC_Target = 0
        elif Encased_Uranium_Cell == 'Infused_Uranium_Cell':
            print('Infused_Uranium_Cell may be incorrect, currently uses no uranium .-.')
            if y == Target_Resource:
                EUC_Target= Target_Resource_Amount
            results = craft(y, Encased_Uranium_Cell, EUC_Target, 'Silica', 'Sulfur', 'Quickwire', None, None)
            Silica_Target += results['In1_Target']
            Sulfur_Target += results['In2_Target']
            Quickwire_Target += results['In3_Target']
            EUC_Target = 0
    elif y == "Fabric": 
        if Fabric == 'Fabric':
            if y == Target_Resource:
                Fabric_Target= Target_Resource_Amount
            results = craft(y, Fabric, Fabric_Target, 'Mycelia', 'Biomass', None, None, None)
            Mycelia_Target += results['In1_Target']
            Biomass_Target += results['In2_Target']
            Fabric_Target = 0
        elif Fabric == 'Polyester_Fabric':
            if y == Target_Resource:
                Fabric_Target= Target_Resource_Amount
            results = craft(y, Fabric, Fabric_Target, 'Polymer_Resin', 'Water', None, None, None)
            PR_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            Fabric_Target = 0
    elif y == "Flower_Petals": 
        Inputs.append('Flower_Petals')
    elif y == "Fuel": 
        if Fuel == "Fuel":
            if y == Target_Resource:
                Fuel_Target= Target_Resource_Amount
            results = craft(y, Fuel, Fuel_Target, 'Crude_Oil', None, None, None, 'Polymer_Resin')
            Crude_Oil_Target += results['In1_Target']
            PR_Target -= results['By1_Target']
            Fuel_Target = 0
        elif Fuel == "Residual_Fuel":
            if y == Target_Resource:
                Fuel_Target= Target_Resource_Amount
            results = craft(y, Fuel, Fuel_Target, 'Heavy_Oil_Residue', None, None, None, None)
            HOR_Target += results['In1_Target']
            Fuel_Target = 0
        elif Fuel == "Unpackage_Fuel(diluted)":
            if y == Target_Resource:
                Fuel_Target= Target_Resource_Amount
            results = craft(y, Fuel, Fuel_Target, 'Packaged_Fuel', None, None, None, 'Empty_Canister')
            PF_Target += results['In1_Target']
            EC_Target -= results['By1_Target']
            Target_Resources.remove('Packaged_Fuel')
            Fuel_Target = 0
            results = craft(y, 'Diluted_Packaged_Fuel', PF_Target, 'Heavy_Oil_Residue', 'Packaged_Water', None, None, None)
            HOR_Target += results['In1_Target']
            PW_Target += results['In2_Target']
            PF_Target = 0
        elif Fuel == "Diluted_Fuel":
            if y == Target_Resource:
                Fuel_Target= Target_Resource_Amount
            results = craft(y, Fuel, Fuel_Target, 'Heavy_Oil_Residue', 'Water', None, None, None)
            HOR_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            Fuel_Target = 0
    elif y == "Fused_Modular_Frame": 
        if Fused_Modular_Frame == 'Fused_Modular_Frame':
            if y == Target_Resource:
                FMF_Target= Target_Resource_Amount
            results = craft(y, Fused_Modular_Frame, FMF_Target, 'Heavy_Modular_Frame', 'Aluminum_Casing', 'Nitrogen_Gas', None, None)
            HMF_Target += results['In1_Target']
            AC_Target += results['In2_Target']
            Nitrogen_Gas_Target += results['In3_Target']
            FMF_Target = 0
        elif Fused_Modular_Frame == "Heat_Fused_Frame":
            if y == Target_Resource:
                FMF_Target= Target_Resource_Amount
            results = craft(y, Fused_Modular_Frame, FMF_Target, 'Heavy_Modular_Frame', 'Aluminum_Ingot', 'Nitric_Acid', 'Fuel', None)
            HMF_Target += results['In1_Target']
            AI_Target += results['In2_Target']
            NA_Target += results['In3_Target']
            Fuel_Target += results['In4_Target']
            FMF_Target = 0
    elif y == "Gas_Filter": 
        if y == Target_Resource:
            GF_Target= Target_Resource_Amount
        results = craft(y, 'Gas_Filter', GF_Target, 'Coal', 'Rubber', 'Fabric', None, None)
        Coal_Target += results['In1_Target']
        Rubber_Target += results['In2_Target']
        Fabric_Target += results['In3_Target']
        GF_Target = 0
    elif y == "Heat_Sink": 
        if Heat_Sink == 'Heat_Sink':
            if y == Target_Resource:
                GF_Target= Target_Resource_Amount
            results = craft(y, Heat_Sink, HS_Target, 'Alclad_Aluminum_Sheet', 'Copper_Sheet', None, None, None)
            AAS_Target += results['In1_Target']
            CSheet_Target += results['In2_Target']
            GF_Target = 0
        elif Heat_Sink == 'Heat_Exchanger':
            if y == Target_Resource:
                GF_Target= Target_Resource_Amount
            results = craft(y, Heat_Sink, HS_Target, 'Aluminum_Casing', 'Rubber', None, None, None)
            AAS_Target += results['In1_Target']
            CSheet_Target += results['In2_Target']
            GF_Target = 0
    elif y == "Heavy_Modular_Frame": 
        if Heavy_Modular_Frame == 'Heavy_Modular_Frame':
            if y == Target_Resource:
                HMF_Target= Target_Resource_Amount
            results = craft(y, Heavy_Modular_Frame, HMF_Target, 'Modular_Frame', 'Steel_Pipe', 'Encased_Industrial_Beam', 'Screw', None)
            MF_Target += results['In1_Target']
            SP_Target += results['In2_Target']
            EIB_Target += results['In3_Target']
            Screw_Target += results['In4_Target']
            HMF_Target = 0
        elif Heavy_Modular_Frame == 'Heavy_Flexible_Frame':
            if y == Target_Resource:
                HMF_Target= Target_Resource_Amount
            results = craft(y, Heavy_Modular_Frame, HMF_Target, 'Modular_Frame', 'Encased_Industrial_Beam', 'Rubber', 'Screw', None)
            MF_Target += results['In1_Target']
            EIB_Target += results['In2_Target']
            Rubber_Target += results['In3_Target']
            Screw_Target += results['In4_Target']
            HMF_Target = 0
        elif Heavy_Modular_Frame == 'Heavy_Encased_Frame':
            if y == Target_Resource:
                HMF_Target= Target_Resource_Amount
            results = craft(y, Heavy_Modular_Frame, HMF_Target, 'Modular_Frame', 'Encased_Industrial_Beam', 'Steel_Pipe', 'Concrete', None)
            MF_Target += results['In1_Target']
            EIB_Target += results['In2_Target']
            SP_Target += results['In3_Target']
            Concrete_Target += results['In4_Target']
            HMF_Target = 0
    elif y == "Heavy_Oil_Residue": 
        if Heavy_Oil_Residue == "Plastic":
            if y == Target_Resource:
                HOR_Target= Target_Resource_Amount
            results = craft(y, Heavy_Oil_Residue, HOR_Target, 'Crude_Oil', None, None, None, 'Plastic')
            Crude_Oil_Target += results['In1_Target']
            Plastic_Target -= results['By1_Target']
            HOR_Target = 0
        elif Heavy_Oil_Residue == "Rubber":
            if y == Target_Resource:
                HOR_Target= Target_Resource_Amount
            results = craft(y, Heavy_Oil_Residue, HOR_Target, 'Crude_Oil', None, None, None, 'Rubber')
            Crude_Oil_Target += results['In1_Target']
            Rubber_Target -= results['By1_Target']
            HOR_Target = 0
        elif Heavy_Oil_Residue == "Polymer_Resin":
            if y == Target_Resource:
                HOR_Target= Target_Resource_Amount
            results = craft(y, Heavy_Oil_Residue, HOR_Target, 'Crude_Oil', None, None, None, 'Polymer_Resin')
            Crude_Oil_Target += results['In1_Target']
            PR_Target -= results['By1_Target']
            HOR_Target = 0
        elif Heavy_Oil_Residue == "Heavy_Oil_Residue":
            if y == Target_Resource:
                HOR_Target= Target_Resource_Amount
            results = craft(y, Heavy_Oil_Residue, HOR_Target, 'Crude_Oil', None, None, None, 'Polymer_Resin')
            Crude_Oil_Target += results['In1_Target']
            PR_Target -= results['By1_Target']
            HOR_Target = 0
    elif y == "High_Speed_Connector": 
        if High_Speed_Connector == 'High_Speed_Connector':
            if y == Target_Resource:
                HSC_Target= Target_Resource_Amount
            results = craft(y, High_Speed_Connector, HSC_Target, 'Quickwire', 'Cable', 'Circuit_Board', None, None)
            Quickwire_Target += results['In1_Target']
            Cable_Target += results['In2_Target']
            CB_Target += results['In3_Target']
            HSC_Target = 0
        elif High_Speed_Connector == 'Silicone_High_Speed_Connector':
            if y == Target_Resource:
                HSC_Target= Target_Resource_Amount
            results = craft(y, High_Speed_Connector, HSC_Target, 'Quickwire', 'Silica', 'Circuit_Board', None, None)
            Quickwire_Target += results['In1_Target']
            Silica_Target += results['In2_Target']
            CB_Target += results['In3_Target']
            HSC_Target = 0
    elif y == "Iodine_Infused_Filter": 
        if y == Target_Resource:
            IIF_Target= Target_Resource_Amount
        results = craft(y, Iodine_Infused_Filter, IIF_Target, 'Gas_Filter', 'Quickwire', 'Aluminum_Casing', None, None)
        GF_Target += results['In1_Target']
        Quickwire_Target += results['In2_Target']
        AC_Target += results['In3_Target']
        IIF_Target = 0
    elif y == "Iron_Ingot": 
        if Iron_Ingot == "Iron_Ingot":
            if y == Target_Resource:
                II_Target = Target_Resource_Amount
            results = craft(y, Iron_Ingot, II_Target, 'Iron_Ore', None, None, None, None)
            Iron_Ore_Target += results['In1_Target']
            II_Target = 0
        elif Iron_Ingot == "Pure_Iron_Ingot":
            if y == Target_Resource:
                II_Target = Target_Resource_Amount
            results = craft(y, Iron_Ingot, II_Target, 'Iron_Ore', 'Water', None, None, None)
            Iron_Ore_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            II_Target = 0
        elif Iron_Ingot == "Iron_Alloy_Ingot":
            if y == Target_Resource:
                II_Target = Target_Resource_Amount
            results = craft(y, Iron_Ingot, II_Target, 'Iron_Ore', 'Copper_Ore', None, None, None)
            Iron_Ore_Target += results['In1_Target']
            Copper_Ore_Target += results['In2_Target']
            II_Target = 0
    elif y == "Iron_Ore": 
        Inputs.append('Iron_Ore')
    elif y == "Iron_Plate": 
        if Iron_Plate == 'Iron_Plate':
            if y == Target_Resource:
                IP_Target= Target_Resource_Amount
            results = craft(y, Iron_Plate, IP_Target, 'Iron_Ingot', None, None, None, None)
            II_Target += results['In1_Target']
            IP_Target = 0
        elif Iron_Plate == 'Coated_Iron_Plate':
            if y == Target_Resource:
                IP_Target= Target_Resource_Amount
            results = craft(y, Iron_Plate, IP_Target, 'Iron_Ingot', 'Plastic', None, None, None)
            II_Target += results['In1_Target']
            Plastic_Target += results['In2_Target']
            IP_Target = 0
        elif Iron_Plate == 'Steel_Coated_Plate':
            if y == Target_Resource:
                IP_Target= Target_Resource_Amount
            results = craft(y, Iron_Plate, IP_Target, 'Steel_Ingot', 'Plastic', None, None, None)
            SI_Target += results['In1_Target']
            Plastic_Target += results['In2_Target']
            IP_Target = 0
    elif y == "Iron_Rod": 
        if Iron_Rod == 'Iron_Rod':
            if y == Target_Resource:
                IR_Target= Target_Resource_Amount
            results = craft(y, Iron_Rod, IR_Target, 'Iron_Ingot', None, None, None, None)
            II_Target += results['In1_Target']
            IR_Target = 0
        elif Iron_Rod == 'Steel_Rod':
            if y == Target_Resource:
                IR_Target= Target_Resource_Amount
            results = craft(y, Iron_Rod, IR_Target, 'Steel_Ingot', None, None, None, None)
            SI_Target += results['In1_Target']
            IR_Target = 0
    elif y == "Leaves": 
        Inputs.append('Leaves')
    elif y == "Limestone": 
        Inputs.append('Limestone')
    elif y == "Liquid_Biofuel": 
        if y == Target_Resource:
            LB_Target= Target_Resource_Amount
        results = craft(y, 'Liquid_Biofuel', LB_Target, 'Solid_Biofuel', 'Water', None, None, None)
        SB_Target += results['In1_Target']
        Water_Target += results['In2_Target']
        LB_Target = 0
    elif y == "Magnetic_Field_Generator": 
        if y == Target_Resource:
            MFG_Target= Target_Resource_Amount
        results = craft(y, 'Magnetic_Field_Generator', MFG_Target, 'Versatile_Framework', 'Electromagnetic_Connection_Rod', 'Battery', None, None)
        VF_Target += results['In1_Target']
        ECR_Target += results['In2_Target']
        Battery_Target += results['In3_Target']
        MFG_Target = 0
    elif y == "Modular_Engine": 
        if y == Target_Resource:
            ME_Target= Target_Resource_Amount
        results = craft(y, 'Modular_Engine', ME_Target, 'Motor', 'Rubber', 'Smart_Plating', None, None)
        Motor_Target += results['In1_Target']
        Rubber_Target += results['In2_Target']
        SP_Target += results['In3_Target']
        ME_Target = 0
    elif y == "Modular_Frame": 
        if Modular_Frame == 'Modular_Frame':
            if y == Target_Resource:
                MF_Target= Target_Resource_Amount
            results = craft(y, Modular_Frame, MF_Target, 'Reinforced_Iron_Plate', 'Iron_Rod', None, None, None)
            RIP_Target += results['In1_Target']
            IR_Target += results['In2_Target']
            MF_Target = 0
        elif Modular_Frame == 'Bolted_Frame':
            if y == Target_Resource:
                MF_Target= Target_Resource_Amount
            results = craft(y, Modular_Frame, MF_Target, 'Reinforced_Iron_Plate', 'Screw', None, None, None)
            RIP_Target += results['In1_Target']
            Screw_Target += results['In2_Target']
            MF_Target = 0
        elif Modular_Frame == 'Steeled_Frame':
            if y == Target_Resource:
                MF_Target= Target_Resource_Amount
            results = craft(y, Modular_Frame, MF_Target, 'Reinforced_Iron_Plate', 'Steel_Pipe', None, None, None)
            RIP_Target += results['In1_Target']
            SP_Target += results['In2_Target']
            MF_Target = 0
    elif y == "Motor": 
        if Motor == 'Motor':
            if y == Target_Resource:
                Motor_Target= Target_Resource_Amount
            results = craft(y, Motor, Motor_Target, 'Rotor', 'Stator', None, None, None)
            Rotor_Target += results['In1_Target']
            Stator_Target += results['In2_Target']
            Motor_Target = 0
        elif Motor == 'Rigour_Motor':
            if y == Target_Resource:
                Motor_Target= Target_Resource_Amount
            results = craft(y, Motor, Motor_Target, 'Rotor', 'Stator', 'Crystal_Oscillator', None, None)
            Rotor_Target += results['In1_Target']
            Stator_Target += results['In2_Target']
            COsc_Target += results['In3_Target']
            Motor_Target = 0
        elif Motor == 'Electric_Motor':
            if y == Target_Resource:
                Motor_Target= Target_Resource_Amount
            results = craft(y, Motor, Motor_Target, 'Electromagnetic_Control_Rod', 'Rotor', None, None, None)
            ECR_Target += results['In1_Target']
            Rotor_Target += results['In2_Target']
            Motor_Target = 0
    elif y == "Mycelia": 
        Inputs.append('Mycelia')
    elif y == "Nitric_Acid": 
        if y == Target_Resource:
            NA_Target= Target_Resource_Amount
        results = craft(y, 'Nitric_Acid', NA_Target, 'Nitrogen_Gas', 'Water', 'Iron_Plate', None, None)
        Nitrogen_Gas_Target += results['In1_Target']
        Water_Target += results['In2_Target']
        IP_Target += results['In3_Target']
        NA_Target = 0
    elif y == "Nitrogen_Gas": 
        Inputs.append('Nitrogen_Gas')
    elif y == "Nobelisk": 
        if Nobelisk == 'Nobelisk':
            if y == Target_Resource:
                Nobelisk_Target= Target_Resource_Amount
            results = craft(y, Nobelisk, Nobelisk_Target, 'Black_Powder', 'Steel_Pipe', None, None, None)
            BP_Target += results['In1_Target']
            SP_Target += results['In2_Target']
            Nobelisk_Target = 0
        elif Nobelisk == 'Seismic_Nobelisk':
            if y == Target_Resource:
                Nobelisk_Target= Target_Resource_Amount
            results = craft(y, Nobelisk, Nobelisk_Target, 'Black_Powder', 'Steel_Pipe', 'Crystal_Oscillator', None, None)
            BP_Target += results['In1_Target']
            SP_Target += results['In2_Target']
            COsc_Target += results['In3_Target']
            Nobelisk_Target = 0
    elif y == "Non_Fissile_Uranium": 
        if Non_Fissile_Uranium == 'Non_Fissile_Uranium':
            if y == Target_Resource:
                NFU_Target= Target_Resource_Amount
            results = craft(y, Non_Fissile_Uranium, NFU_Target, 'Nuclear_Waste', 'Nitric_Acid', 'Sulfuric_Acid', 'Silica', 'Water')
            NW_Target += results['In1_Target']
            NA_Target += results['In2_Target']
            SA_Target += results['In3_Target']
            Silica_Target += results['In4_Target']
            Water_Target -= results['By1_Target']
            NFU_Target = 0
        elif Non_Fissile_Uranium == 'Fertile_Uranium':
            if y == Target_Resource:
                NFU_Target= Target_Resource_Amount
            results = craft(y, Non_Fissile_Uranium, NFU_Target, 'Uranium', 'Nuclear_Waste', 'Nitric_Acid', 'Sulfuric_Acid', None)
            Uranium_Target += results['In1_Target']
            NW_Target += results['In2_Target']
            NA_Target += results['In3_Target']
            SA_Target += results['In4_Target']
            NFU_Target = 0
    elif y == "Nuclear_Fuel_Rod": 
        if Nuclear_Fuel_Rod == 'Uranium_Fuel_Rod':
            if y == Target_Resource:
                NFR_Target= Target_Resource_Amount
            results = craft(y, Nuclear_Fuel_Rod, NFR_Target, 'Encased_Uranium_Cell', 'Encased_Industrial_Beam', 'Electromagnetic_Control_Rod', None, None)
            EUC_Target += results['In1_Target']
            EIB_Target += results['In2_Target']
            ECR_Target += results['In3_Target']
            NFR_Target = 0
        elif Nuclear_Fuel_Rod == 'Nuclear_Fuel_Unit':
            if y == Target_Resource:
                NFR_Target= Target_Resource_Amount
            results = craft(y, Nuclear_Fuel_Rod, NFR_Target, 'Encased_Uranium_Cell', 'Electromagnetic_Control_Rod', 'Crystal_Oscillator', 'Beacon', None)
            EUC_Target += results['In1_Target']
            ECR_Target += results['In2_Target']
            COsc_Target += results['In3_Target']
            Beacon_Target += results['In4_Target']
            NFR_Target = 0
    elif y == "Nuclear_Pasta": 
        if y == Target_Resource:
            NP_Target= Target_Resource_Amount
        results = craft(y, 'Nuclear_Pasta', NP_Target, 'Copper_Powder', 'Pressure_Conversion_Cube', None, None, None)
        CPow_Target += results['In1_Target']
        PCC_Target += results['In2_Target']
        NP_Target = 0
    elif y == "Nuclear_Waste": 
        if y == Target_Resource:
            NW_Target= Target_Resource_Amount
        results = craft(y, 'Nuclear_Waste', NW_Target, 'Nuclear_Fuel_Rod', 'Water', None, None, None)
        NFR_Target += results['In1_Target']
        Water_Target += results['In2_Target']
        NW_Target = 0
    elif y == "Packaged_Alumina_Solution": 
        if y == Target_Resource:
            PAS_Target= Target_Resource_Amount
        results = craft(y, 'Packaged_Alumina_Solution', PAS_Target, 'Alumina_Solution', 'Empty_Canister', None, None, None)
        AS_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PAS_Target = 0
    elif y == "Packaged_Fuel": 
        if Packaged_Fuel == 'Packaged_Fuel':
            if y == Target_Resource:
                PF_Target = Target_Resource_Amount
            results = craft(y, Packaged_Fuel, PF_Target, 'Fuel', 'Empty_Canister', None, None, None)
            Fuel_Target += results['In1_Target']
            EC_Target += results['In2_Target']
            PF_Target = 0
        elif Packaged_Fuel == 'Diluted_Packaged_Fuel':
            if y == Target_Resource:
                PF_Target= Target_Resource_Amount
            results = craft(y, Packaged_Fuel, PF_Target, 'Heavy_Oil_Residue', 'Packaged_Water', None, None, None)
            HOR_Target += results['In1_Target']
            PW_Target += results['In2_Target']
            PF_Target = 0
    elif y == "Packaged_Heavy_Oil_Residue": 
        if y == Target_Resource:
            PHOR_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Heavy_Oil_Residue', PHOR_Target, 'Heavy_Oil_Residue', 'Empty_Canister', None, None, None)
        HOR_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PHOR_Target = 0
    elif y == "Packaged_Liquid_Biofuel":
        if y == Target_Resource:
            PLB_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Liquid_Biofuel', PLB_Target, 'Liquid_Biofuel', 'Empty_Canister', None, None, None)
        LB_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PLB_Target = 0
    elif y == "Packaged Nitric Acid":
        if y == Target_Resource:
            PNA_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Nitric_Acid', PNA_Target, 'Nitric_Acid', 'Empty_Fluid_Tank', None, None, None)
        NA_Target += results['In1_Target']
        EFT_Target += results['In2_Target']
        PF_Target = 0
    elif y == "Packaged Nitrogen Gas":
        if y == Target_Resource:
            PNG_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Nitrogen_Gas', PNG_Target, 'Nitrogen_Gas', 'Empty_Fluid_Tank', None, None, None)
        Nitrogen_Gas_Target += results['In1_Target']
        EFT_Target += results['In2_Target']
        PNG_Target = 0
    elif y == "Packaged Oil":
        if y == Target_Resource:
          PO_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Oil', PO_Target, 'Crude_Oil', 'Empty_Canister', None, None, None)
        Crude_Oil_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PO_Target = 0
    elif y == "Packaged Sulfuric Acid":
        if y == Target_Resource:
          PSA_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Sulfuric_Acid', PSA_Target, 'Sulfuric_Acid', 'Empty_Canister', None, None, None)
        SA_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PSA_Target = 0
    elif y == "Packaged_Turbofuel": 
        if y == Target_Resource:
          PT_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Turbofuel', PT_Target, 'Turbofuel', 'Empty_Canister', None, None, None)
        Turbofuel_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PT_Target = 0
    elif y == "Packaged_Water": 
        if y == Target_Resource:
          PF_Target = Target_Resource_Amount
        results = craft(y, 'Packaged_Water', PW_Target, 'Water', 'Empty_Canister', None, None, None)
        Water_Target += results['In1_Target']
        EC_Target += results['In2_Target']
        PF_Target = 0
    elif y == "Petroleum_Coke": 
        if y == Target_Resource:
          PC_Target = Target_Resource_Amount
        results = craft(y, 'Petroleum_Coke', PC_Target, 'Heavy_Oil_Residue', None, None, None, None)
        HOR_Target += results['In1_Target']
        PC_Target = 0
    elif y == "Plastic": 
        if Plastic == 'Plastic':
            if y == Target_Resource:
                Plastic_Target= Target_Resource_Amount
            results = craft(y, Plastic, Plastic_Target, 'Crude_Oil', None, None, None, 'Heavy_Oil_Residue')
            Crude_Oil_Target += results['In1_Target']
            HOR_Target -= results['By1_Target']
            Plastic_Target = 0
        elif Plastic == 'Residual_Plastic':
            if y == Target_Resource:
                Plastic_Target= Target_Resource_Amount
            results = craft(y, Plastic, Plastic_Target, 'Polymer_Resin', 'Water', None, None, None)
            PR_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            Plastic_Target = 0
        elif Plastic == 'Recycled_Plastic':
            if y == Target_Resource:
                Plastic_Target= Target_Resource_Amount
            results = craft(y, Plastic, Plastic_Target, 'Rubber', 'Fuel', None, None, None)
            Rubber_Target += results['In1_Target']
            Fuel_Target += results['In2_Target']
            Plastic_Target = 0
    elif y == "Plutonium_Fuel_Rod": 
        if Plutonium_Fuel_Rod == 'Plutonium_Fuel_Rod':
            if y == Target_Resource:
                PFR_Target = Target_Resource_Amount
            results = craft(y, Plutonium_Fuel_Rod, PFR_Target, 'Encased_Plutonium_Cell', 'Steel_Beam', 'Electromagnetic_Control_Rod', 'Heat_Sink', None)
            EPC_Target += results['In1_Target']
            SB_Target += results['In2_Target']
            ECR_Target += results['In3_Target']
            HS_Target += results['In4_Target']
            PFR_Target = 0
        elif Plutonium_Fuel_Rod == 'Plutonium_Fuel_Unit':
            if y == Target_Resource:
                PFR_Target = Target_Resource_Amount
            results = craft(y, Plutonium_Fuel_Rod, PFR_Target, 'Encased_Plutonium_Cell', 'Pressure_Conversion_Cube', None, None, None)
            EPC_Target += results['In1_Target']
            PCC_Target += results['In2_Target']
            PFR_Target = 0
    elif y == "Plutonium_Pellets": 
        if y == Target_Resource:
            PP_Target = Target_Resource_Amount
        results = craft(y, y, PP_Target, 'Non_Fissile_Uranium', 'Nuclear_Waste', None, None, None)
        NFU_Target += results['In1_Target']
        NW_Target += results['In2_Target']
        PP_Target = 0
    elif y == "Plutonium_Waste": 
        if y == Target_Resource:
            PW_Target = Target_Resource_Amount
        results = craft(y, y, PW_Target, 'Plutonium_Fuel_Rod', 'Water', None, None, None)
        PFR_Target += results['In1_Target']
        Water_Target += results['In2_Target']
        PW_Target = 0
    elif y == "Polymer_Resin": 
        if Polymer_Resin == 'Fuel':
            if y == Target_Resource:
                PR_Target= Target_Resource_Amount
            results = craft(y, Polymer_Resin, target, 'Crude_Oil', None, None, None, 'Fuel')
            Crude_Oil_Target += results['In1_Target']
            Fuel_Target -= results['By1_Target']
            PR_Target = 0
        elif Polymer_Resin == 'Polymer_Resin':
            if y == Target_Resource:
                PR_Target= Target_Resource_Amount
            results = craft(y, recipe, target, 'Crude_Oil', None, None, None, 'Heavy_Oil_Residue')
            Crude_Oil_Target += results['In1_Target']
            HOR_Target -= results['By1_Target']
            PR_Target = 0
        elif Polymer_Resin == 'Heavy_Oil_Residue':
            if y == Target_Resource:
                PR_Target= Target_Resource_Amount
            results = craft(y, recipe, target, 'Crude_Oil', None, None, None, 'Heavy_Oil_Residue')
            Crude_Oil_Target += results['In1_Target']
            PR_Target = 0
    elif y == "Pressure_Conversion_Cube": 
        if y == Target_Resource:
            PCC_Target = Target_Resource_Amount
        results = craft(y, y, PCC_Target, 'Fused_Modular_Frame', 'Radio_Control_Unit', None, None, None)
        FMF_Target += results['In1_Target']
        RCU_Target += results['In2_Target']
        PCC_Target = 0
    elif y == "Quartz_Crystal": 
        if Quartz_Crystal == 'Quartz_Crystal':
            if y == Target_Resource:
                QCrystal_Target = Target_Resource_Amount
            results = craft(y, Quartz_Crystal, QCrystal_Target, 'Raw_Quartz', None, None, None, None)
            Raw_Quartz_Target += results['In1_Target']
            QCrystal_Target = 0
        elif Quartz_Crystal == 'Pure_Quartz_Crystal':
            if y == Target_Resource:
                QCrystal_Target = Target_Resource_Amount
            results = craft(y, Quartz_Crystal, QCrystal_Target, 'Raw_Quartz', 'Water', None, None, None)
            Raw_Quartz_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            QCrystal_Target = 0
    elif y == "Quickwire": 
        if Quickwire == 'Quickwire':
            if y == Target_Resource:
                Quickwire_Target = Target_Resource_Amount
            results = craft(y, Quickwire, Quickwire_Target, 'Caterium_Ingot', None, None, None, None)
            CatI_Target += results['In1_Target']
            Quickwire_Target = 0
        elif Quickwire == 'Fused_Quickwire':
            if y == Target_Resource:
                Quickwire_Target = Target_Resource_Amount
            results = craft(y, Quickwire, Quickwire_Target, 'Caterium_Ingot', 'Copper_Ingot', None, None, None)
            CatI_Target += results['In1_Target']
            CopI_Target += results['In2_Target']
            Quickwire_Target = 0
    elif y == "Radio_Control_Unit": 
        if Radio_Control_Unit == 'Radio_Control_Unit':
            if y == Target_Resource:
                RCU_Target = Target_Resource_Amount
            results = craft(y, Radio_Control_Unit, RCU_Target, 'Aluminum_Casing', 'Crystal_Oscillator', 'Computer', None, None)
            AC_Target += results['In1_Target']
            COsc_Target += results['In2_Target']
            Computer_Target += results['In3_Target']
            RCU_Target = 0
        elif Radio_Control_Unit == 'Radio_Control_System':
            if y == Target_Resource:
                RCU_Target = Target_Resource_Amount
            results = craft(y, Radio_Control_Unit, RCU_Target, 'Crystal_Oscillator', 'Circuit_Board', 'Aluminum_Casing', 'Rubber', None)
            COsc_Target += results['In1_Target']
            CB_Target += results['In2_Target']
            AC_Target += results['In3_Target']
            Rubber_Target += results['In4_Target']
            RCU_Target = 0
        elif Radio_Control_Unit == 'Radio_Connection_Unit':
            if y == Target_Resource:
                RCU_Target = Target_Resource_Amount
            results = craft(y, Radio_Control_Unit, RCU_Target, 'Heat_Sink', 'High_Speed_Connector', 'Quartz_Crystal', None, None)
            HS_Target += results['In1_Target']
            HSC_Target += results['In2_Target']
            QCrystal_Target += results['In3_Target']
            RCU_Target = 0
    elif y == "Raw_Quartz": 
        Inputs.append('Raw_Quartz')
    elif y == "Reinforced_Iron_Plate": 
        if Reinforced_Iron_Plate == "Reinforced_Iron_Plate":
            if y == Target_Resource:
                RIP_Target = Target_Resource_Amount
            results = craft(y, Reinforced_Iron_Plate, RIP_Target, 'Iron_Plate', 'Screw', None, None, None)
            IP_Target += results['In1_Target']
            Screw_Target += results['In2_Target']
            RIP_Target = 0
        elif Reinforced_Iron_Plate == "Adhered_Iron_Plate":
            if y == Target_Resource:
                RIP_Target = Target_Resource_Amount
            results = craft(y, Reinforced_Iron_Plate, RIP_Target, 'Iron_Plate', 'Rubber', None, None, None)
            IP_Target += results['In1_Target']
            Rotor_Target += results['In2_Target']
            RIP_Target = 0
        elif Reinforced_Iron_Plate == "Bolted_Iron_Plate":
            if y == Target_Resource:
                RIP_Target = Target_Resource_Amount
            results = craft(y, Reinforced_Iron_Plate, RIP_Target, 'Iron_Plate', 'Screw', None, None, None)
            IP_Target += results['In1_Target']
            Screw_Target += results['In2_Target']
            RIP_Target = 0
        elif Reinforced_Iron_Plate == "Stitched_Iron_Plate":
            if y == Target_Resource:
                RIP_Target = Target_Resource_Amount
            results = craft(y, Reinforced_Iron_Plate, RIP_Target, 'Iron_Plate', 'Wire', None, None, None)
            IP_Target += results['In1_Target']
            Wire_Target += results['In2_Target']
            RIP_Target = 0
    elif y == "Rifle_Cartridge": 
        if y == Target_Resource:
            RC_Target = Target_Resource_Amount
        results = craft(y, y, RC_Target, 'Beacon', 'Steel_Pipe', 'Black_Powder', 'Rubber', None)
        Beacon_Target += results['In1_Target']
        SP_Target += results['In2_Target']
        BP_Target += results['In3_Target']
        Rubber_Target += results['In4_Target']
        RC_Target = 0
    elif y == "Rotor": 
        if Rotor == "Rotor":
            if y == Target_Resource:
                Rotor_Target = Target_Resource_Amount
            results = craft(y, Rotor, Rotor_Target, 'Iron_Rod', 'Screw', None, None, None)
            IR_Target += results['In1_Target']
            Screw_Target += results['In2_Target']
            Rotor_Target = 0
        elif Rotor == "Copper_Rotor":
            if y == Target_Resource:
                Rotor_Target = Target_Resource_Amount
            results = craft(y, Rotor, Rotor_Target, 'Copper_Sheet', 'Screw', None, None, None)
            CSheet_Target += results['In1_Target']
            Screw_Target += results['In2_Target']
            Rotor_Target = 0
        elif Rotor == "Steel_Rotor":
            if y == Target_Resource:
                Rotor_Target = Target_Resource_Amount
            results = craft(y, Rotor, Rotor_Target, 'Steel_Pipe', 'Wire', None, None, None)
            SP_Target += results['In1_Target']
            Wire_Target += results['In2_Target']
            Rotor_Target = 0
    elif y == "Rubber": 
        if Rubber == 'Rubber':
            if y == Target_Resource:
                Rubber_Target= Target_Resource_Amount
            results = craft(y, Rubber, Rubber_Target, 'Crude_Oil', None, None, None, 'Heavy_Oil_Residue')
            RIP_Target += results['In1_Target']
            HOR_Target -= results['By1_Target']
            Rubber_Target = 0
        elif Rubber == 'Residual_Plastic':
            if y == Target_Resource:
                Rubber_Target= Target_Resource_Amount
            results = craft(y, Rubber, Rubber_Target, 'Polymer_Resin', 'Water', None, None, None)
            PR_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            Rubber_Target = 0
        elif Rubber == 'Recycled_Plastic':
            if y == Target_Resource:
                Rubber_Target= Target_Resource_Amount
            results = craft(y, Rubber, Rubber_Target, 'Rubber', 'Fuel', None, None, None)
            Plastic_Target += results['In1_Target']
            Fuel_Target += results['In2_Target']
            Rubber_Target = 0
    elif y == "Screw": 
        if Screw == 'Screw':
            if y == Target_Resource:
                Screw_Target = Target_Resource_Amount
            results = craft(y, Screw, Screw_Target, 'Iron_Rod', None, None, None, None)
            IR_Target += results['In1_Target']
            Screw_Target = 0
        elif Screw == 'Casted_Screw':
            if y == Target_Resource:
                Screw_Target = Target_Resource_Amount
            results = craft(y, Screw, Screw_Target, 'Iron_Ingot', None, None, None, None)
            II_Target += results['In1_Target']
            Screw_Target = 0
        elif Screw == 'Steel_Screw':
            if y == Target_Resource:
                Screw_Target = Target_Resource_Amount
            results = craft(y, Screw, Screw_Target, 'Steel_Beam', None, None, None, None)
            SB_Target += results['In1_Target']
            Screw_Target = 0
    elif y == "Silica": 
        if Silica == 'Silica':
            if y == Target_Resource:
                Silica_Target = Target_Resource_Amount
            results = craft(y, Silica, Silica_Target, 'Raw_Quartz', None, None, None, None)
            Raw_Quartz_Target += results['In1_Target']
            Silica_Target = 0
        elif Silica == 'Alumina_Solution':
            if y == Target_Resource:
                Silica_Target = Target_Resource_Amount
            results = craft(y, Silica, Silica_Target, 'Bauxite', 'Water', None, None, 'Alumina_Solution')
            Bauxite_Target += results['In1_Target']
            Water_Target += results['In2_Target']
            AS_Target -= results['By1_Target']
            Silica_Target = 0
        elif Silica == 'Cheap_Silica':
            if y == Target_Resource:
                Silica_Target = Target_Resource_Amount
            results = craft(y, recipe, target, 'Raw_Quartz', 'Limestone', None, None, None)
            Raw_Quartz_Target += results['In1_Target']
            Limestone_Target += results['In2_Target']
            Silica_Target = 0
    elif y == "Smart_Plating": 
        if Smart_Plating == 'Smart_Plating':
            if y == Target_Resource:
                SP_Target = Target_Resource_Amount
            results = craft(y, Smart_Plating, SP_Target, 'Reinforced_Iron_Plate', 'Rotor', None, None, None)
            RIP_Target += results['In1_Target']
            Rotor_Target += results['In2_Target']
            SP_Target = 0
        elif Smart_Plating == 'Plastic_Smart_Plating':
            if y == Target_Resource:
                SP_Target = Target_Resource_Amount
            results = craft(y, Smart_Plating, SP_Target, 'Reinforced_Iron_Plate', 'Rotor', 'Plastic', None, None)
            RIP_Target += results['In1_Target']
            Rotor_Target += results['In2_Target']
            Plastic_Target += results['In3_Target']
            SP_Target = 0
    elif y == "Solid_Biofuel": 
        if y == Target_Resource:
            SB_Target = Target_Resource_Amount
        results = craft(y, y, SB_Target, 'Biomass', None, None, None, None)
        Biomass_Target += results['In1_Target']
        SB_Target = 0
    elif y == "Spiked_Rebar": 
        if y == Target_Resource:
            SR_Target = Target_Resource_Amount
        results = craft(y, y, SR_Target, 'Iron_Rod', None, None, None, None)
        IR_Target += results['In1_Target']
        SR_Target = 0
    elif y == "Stator": 
        if Stator == 'Stator':
            if y == Target_Resource:
                Stator_Target = Target_Resource_Amount
            results = craft(y, Stator, Stator_Target, 'Steel_Pipe', 'Wire', None, None, None)
            RIP_Target += results['In1_Target']
            Wire_Target += results['In2_Target']
            Stator_Target = 0
        elif Stator == 'Quickwire_Stator':
            if y == Target_Resource:
                Stator_Target = Target_Resource_Amount
            results = craft(y, Stator, Stator_Target, 'Steel_Pipe', 'Quickwire_Target', None, None, None)
            RIP_Target += results['In1_Target']
            Quickwire_Target += results['In2_Target']
            Stator_Target = 0
    elif y == "Steel_Beam": 
        if y == Target_Resource:
            SB_Target = Target_Resource_Amount
        results = craft(y, y, SB_Target, 'Steel_Ingot', None, None, None, None)
        SI_Target += results['In1_Target']
        z = 0
        SB_Target = 0
    elif y == "Steel_Ingot": 
        if Steel_Ingot == "Steel_Ingot":
            if y == Target_Resource:
                SI_Target = Target_Resource_Amount
            results = craft(y, Steel_Ingot, SI_Target, 'Iron_Ore', 'Coal', None, None, None)
            Iron_Ore_Target += results['In1_Target']
            Rotor_Target += results['In2_Target']
            SI_Target = 0
        elif Steel_Ingot == "Coke_Steel_Ingot":
            if y == Target_Resource:
                SI_Target = Target_Resource_Amount
            results = craft(y, Steel_Ingot, SI_Target, 'Iron_Ore', 'Petroleum_Coke', None, None, None)
            Iron_Ore_Target += results['In1_Target']
            PC_Target += results['In2_Target']
            SI_Target = 0
        elif Steel_Ingot == "Compacted_Steel_Ingot":
            if y == Target_Resource:
                SI_Target = Target_Resource_Amount
            results = craft(y, Steel_Ingot, SI_Target, 'Iron_Ore', 'Compacted_Coal', None, None, None)
            Iron_Ore_Target += results['In1_Target']
            Compacted_Coal += results['In2_Target']
            SI_Target = 0
        elif Steel_Ingot == "Solid_Steel_Ingot":
            if y == Target_Resource:
                SI_Target = Target_Resource_Amount
            results = craft(y, Steel_Ingot, SI_Target, 'Iron_Ingot', 'Coal', None, None, None)
            II_Target += results['In1_Target']
            Coal_Target += results['In2_Target']
            SI_Target = 0
    elif y == "Steel_Pipe": 
        if y == Target_Resource:
            SP_Target = Target_Resource_Amount
        results = craft(y, y, SP_Target, 'Steel_Ingot', None, None, None, None)
        SI_Target += results['In1_Target']
        SP_Target = 0
    elif y == "Sulfur": 
        Inputs.append('Sulfur')
    elif y == "Sulfuric_Acid": 
        if y == Target_Resource:
            SA_Target = Target_Resource_Amount
        results = craft(y, y, SA_Target, 'Sulfur', 'Water', None, None, None)
        Sulfur_Target += results['In1_Target']
        Water_Target += results['In2_Target']
        SA_Target = 0
    elif y == "Supercomputer": 
        if Supercomputer == 'Supercomputer':
            if y == Target_Resource:
                Supercomputer_Target = Target_Resource_Amount
            results = craft(y, Supercomputer, Supercomputer_Target, 'Computer', 'AI_Limiter', 'High_Speed_Connector', 'Plastic', None)
            Computer_Target += results['In1_Target']
            AIL_Target += results['In2_Target']
            HSC_Target += results['In3_Target']
            Plastic_Target += results['In4_Target']
        elif Supercomputer == 'OC_Supercomputer':
            if y == Target_Resource:
                Supercomputer_Target = Target_Resource_Amount
            results = craft(y, Supercomputer, Supercomputer_Target, 'Radio_Control_Unit', 'Cooling_System', None, None, None)
            RCU_Target += results['In1_Target']
            CSys_Target += results['In2_Target']
            Supercomputer_Target = 0
        elif Supercomputer == 'Super_State_Computer':
            if y == Target_Resource:
                Supercomputer_Target = Target_Resource_Amount
            results = craft(y, Supercomputer, Supercomputer_Target, 'Computer', 'Electromagnetic_Control_Rod', 'Battery', 'Wire', None)
            Computer_Target += results['In1_Target']
            AIL_Target += results['In2_Target']
            HSC_Target += results['In3_Target']
            Plastic_Target += results['In4_Target']
            Supercomputer_Target = 0
    elif y == "Thermal_Propulsion_Rocket": 
        if y == Target_Resource:
            TPR_Target = Target_Resource_Amount
        results = craft(y, y, TPR_Target, 'Modular_Engine', 'Turbo_Motor', 'Cooling_System', 'Fused_Modular_Frame', None)
        ME_Target += results['In1_Target']
        TM_Target += results['In2_Target']
        CSys_Target += results['In3_Target']
        FMF_Target += results['In4_Target']
        TPR_Target = 0
    elif y == "Turbo_Motor": 
        if Turbo_Motor == 'Turbo_Motor':
            if y == Target_Resource:
                TM_Target = Target_Resource_Amount
            results = craft(y, Turbo_Motor, TM_Target, 'Cooling_System', 'Radio_Control_Unit', 'Motor', 'Rubber', None)
            CSys_Target += results['In1_Target']
            RCU_Target += results['In2_Target']
            Motor_Target += results['In3_Target']
            Rubber_Target += results['In4_Target']
            TM_Target = 0
        elif Turbo_Motor == 'Turbo_Rigour_Motor':
            if y == Target_Resource:
                TM_Target = Target_Resource_Amount
            results = craft(y, Turbo_Motor, TM_Target, 'Motor', 'Radio_Control_Unit', 'Electromagnetic_Control_Rod', 'Rotor', None)
            Motor_Target += results['In1_Target']
            RCU_Target += results['In2_Target']
            ECR_Target += results['In3_Target']
            Rotor_Target += results['In4_Target']
            TM_Target = 0
        elif Turbo_Motor == 'Turbo_Pressure_Motor':
            if y == Target_Resource:
                TM_Target = Target_Resource_Amount
            results = craft(y, Turbo_Motor, TM_Target, 'Motor', 'Pressure_Conversion_Cube', 'Packaged_Nitrogen_Gas', 'Stator', None)
            Motor_Target += results['In1_Target']
            PCC_Target += results['In2_Target']
            PNG_Target += results['In3_Target']
            Stator_Target += results['In4_Target']
            z = 0
            TM_Target = 0
    elif y == "Turbofuel": 
        if Turbofuel == 'Turbofuel':
            if y == Target_Resource:
                Turbofuel_Target = Target_Resource_Amount
            results = craft(y, Turbofuel, Turbofuel_Target, 'Fuel', 'Compacted_Coal', None, None, None)
            Fuel_Target += results['In1_Target']
            Compacted_Coal_Target += results['In2_Target']
            Turbofuel_Target = 0
        elif Turbofuel == 'Turbo_Heavy_Fuel':
            if y == Target_Resource:
                Turbofuel_Target = Target_Resource_Amount
            results = craft(y, Turbofuel, Turbofuel_Target, 'Heavy_Oil_Residue', 'Compacted_Coal', None, None, None)
            HOR_Target += results['In1_Target']
            Compacted_Coal_Target += results['In2_Target']
            Turbofuel_Target = 0
        elif Turbofuel == 'Turbo_Blend_Fuel':
            if y == Target_Resource:
                Turbofuel_Target = Target_Resource_Amount
            results = craft(y, Turbofuel, Turbofuel_Target, 'Fuel', 'Heavy_Oil_Residue', 'Sulfur', 'Petroleum_Coke', None)
            Fuel_Target += results['In1_Target']
            HOR_Target += results['In2_Target']
            Sulfur_Target += results['In3_Target']
            PC_Target += results['In4_Target']
            Turbofuel_Target = 0
    elif y == "Uranium": 
        Inputs.append('Uranium')
    elif y == "Versatile_Framework": 
        if Versatile_Framework == 'Versatile_Framework':
            if y == Target_Resource:
                VF_Target = Target_Resource_Amount
            results = craft(y, Versatile_Framework, VF_Target, 'Modular_Frame', 'Steel_Beam', None, None, None)
            MF_Target += results['In1_Target']
            SB_Target += results['In2_Target']
            VF_Target = 0
        elif Versatile_Framework == 'Flexible_Framework':
            if y == Target_Resource:
                VF_Target = Target_Resource_Amount
            results = craft(y, Versatile_Framework, VF_Target, 'Modular_Frame', 'Steel_Beam', 'Rubber', None, None)
            MF_Target += results['In1_Target']
            SB_Target += results['In2_Target']
            Rubber_Target += results['In3_Target']
            VF_Target = 0
    elif y == "Water": 
        Inputs.append('Water')
    elif y == "Wire": 
        if Wire == 'Wire':
            if y == Target_Resource:
                Wire_Target = Target_Resource_Amount
            results = craft(y, Wire, Wire_Target, 'Copper_Ingot', None, None, None, None)
            CopI_Target += results['In1_Target']
            Wire_Target = 0
        elif Wire == 'Fused_Wire':
            if y == Target_Resource:
                Wire_Target = Target_Resource_Amount
            results = craft(y, Wire, Wire_Target, 'Copper_Ingot', 'Caterium_Ingot', None, None, None)
            CopI_Target += results['In1_Target']
            CatI_Target += results['In2_Target']
            Wire_Target = 0
        elif Wire == 'Iron_Wire':
            if y == Target_Resource:
                Wire_Target = Target_Resource_Amount
            results = craft(y, Wire, Wire_Target, 'Iron_Ingot', None, None, None, None)
            II_Target += results['In1_Target']
            Wire_Target = 0
        elif Wire == 'Caterium_Wire':
            if y == Target_Resource:
                Wire_Target = Target_Resource_Amount
            results = craft(y, Wire, Wire_Target, 'Caterium_Ingot', None, None, None, None)
            CatI_Target += results['In1_Target']
            Wire_Target = 0
    elif y == "Wood":
        Inputs.append('Wood')
    else:
        print('Failed to find recipie for item:', y, '\n Please contact creator')


print('Inputs:')
for item in Inputs:
    print('\n')
    if item == "Alien_Carapace":
        print(item, ': ', Alien_Carapace_Target)
    elif item == "Alien_Organs":
        print(item, ': ', Alien_Organs_Target)
    elif item == "Bauxite":
        print(item, ': ', Bauxite_Target)
    elif item == "Caterium_Ore":
        print(item, ': ', Caterium_Ore_Target)
    elif item == "Coal":
        print(item, ': ', Coal_Target)
    elif item == 'Copper_Ore':
        print(item, ': ', Copper_Ore_Target)
    elif item == 'Crude_Oil':
        print(item, ': ', Crude_Oil_Target)
    elif item == 'Flower_Petals':
        print(item, ': ', Flower_Petals_Target)
    elif item == 'Iron_Ore':
        print(item, ': ', Iron_Ore_Target)
    elif item == 'Leaves':
        print(item, ': ', Leaves_Target)
    elif item == 'Limestone':
        print(item, ': ', Limestone_Target)
    elif item == 'Mycelia':
        print(item, ': ', Mycelia_Target)
    elif item == 'Nitrogen_Gas':
        print(item, ': ', Nitrogen_Gas_Target)
    elif item == 'Raw_Quartz':
        print(item, ': ', Raw_Quartz_Target)
    elif item == 'Sulfur':
        print(item, ': ', Sulfur_Target)
    elif item == 'Uranium':
        print(item, ': ', Uranium_Target)
    elif item == 'Water':
        print(item, ': ', Water_Target)
    elif item == 'Wood':
        print(item, ': ', Wood_Target)
    else:
     print('Mistake:', item, 'has not been added to input list, please contact creator')
    Inputs.remove(item)


print('Byproducts:')
for item in Byproducts:
    print('\n')
    if item == 'Silica':
        print('Silica Byproduct:', abs(Silica_Target))
    elif item == 'Water':
        print('Water Byproduct:', abs(Water_Target))
    elif item == 'Polymer_Resin':
        print('Polymer Resin Byproduct:', abs(PR_Target))
    elif item == 'Heavy_Oil_Residue':
        print('Heavy Oil Residue Byproduct:', abs(HOR_Target))
    elif item == 'Fuel':
        print('Fuel Byproduct:', abs(Fuel_Target))
    else:
        print('Mistake:', item, 'has not been added to byproduct list, please contact creator')
    Byproducts.remove(item)